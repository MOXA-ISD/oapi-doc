swagger: '2.0'

info:
  version: 0.0.0
  title: ThingsPro Tenant Portal RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
tags:
  - name: group
    description: Handles tenant groups data

paths:
  /groups:
    get:
      description: Get all groups field data
      parameters:
        - name: deviceId
          in: query
          type: string
          description: 'Get group device belongs to'
          required: false
        - name: groupName
          in: query
          type: string
          description: Filter the group list by groupName
          required: false
        - name: description
          in: query
          type: string
          description: Filter the group list by description
          required: false
        - name: order
          in: query
          description: Sort the group list by specific condition, default is order by 'lastUpdatedAt'
          required: false
          type: string
          enum:
          - groupName
          - deviceCount
        - name: sort
          in: query
          description: Sorting the filter group list, default is desc
          required: false
          type: string
          enum:
          - desc
          - asc
        - name: limit
          in: query
          description: max return groups count (default is 100 and max is 1000)
          required: false
          type: integer
        - name: offset
          in: query
          description: offset
          required: false
          type: integer
      responses:
        200:
          description: An array of group
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
            example: 
              $ref: '#/externalDocs/x-mocks/GroupList'
      tags:
        - group
    post:
      description: Create a new group.
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/GroupCreate'
      responses:
        201:
          description: Create group successfully
          schema:
            type: object
            items:
              $ref: '#/definitions/GroupResponse'
            example: 
              $ref: '#/externalDocs/x-mocks/GroupResponse'
      tags:
        - group
 
  /groups/{groupId}:
    parameters:
      - name: groupId
        in: path
        description: group unique identifier
        required: true
        type: integer
    get:
      description: Return group data with given ID
      parameters:
        - name: groupName
          in: query
          description: Filter the group list by groupName
          required: false
          type: string
      tags:
        - group
      responses:
        200:
          description: An Object of the group
          schema:
            type: object
            items:
              $ref: '#/definitions/Group'
            example: 
              $ref: '#/externalDocs/x-mocks/Group'
    delete:
      description: Delete group with given ID
      tags:
        - group
      responses:
        204:
          description: success
    patch:
      description: Update group settings
      tags:
        - group
      parameters:
        - name: body
          in: body
          description: The parameters for update single group
          required: true
          schema:
            $ref: '#/definitions/GroupUpdate'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Group'
            example:
              $ref: '#/externalDocs/x-mocks/Group'
  /groups/{groupId}/unassignDevices:
    parameters:
      - name: groupId
        in: path
        description: group unique identifier
        required: true
        type: integer
    get:
      description: Return all devies don't belong to this group
      parameters:
        - name: distinct
          in: query
          description: Get distict value of speific field, this query parameter will return string array only
          required: false
          type: string
          enum:
          - deviceName
          - modelName
          - connectionStatus
        - name: order
          in: query
          description: Ordering the filter device list, default is desc
          required: false
          type: string
          enum:
          - desc
          - asc
        - name: sort
          in: query
          description: Sort the device list by specific ordering, default is sort by 'lastUpdatedAt'
          required: false
          type: string
          enum:
          - deviceName
          - modelName
          - connectionStatus
        - name: limit
          in: query
          description: max return devices count (default is 100 and max is 1000)
          required: false
          type: integer
        - name: offset
          in: query
          description: offset
          required: false
          type: integer
      tags:
        - group
      responses:
        200:
          description: An Object of the group
          schema:
            type: object
            items:
              $ref: '#/definitions/DevicePoc'
            example: 
              $ref: '#/externalDocs/x-mocks/DevicePocList'

  /groups/{groupId}/directMethodList:
    parameters:
      - name: groupId
        in: path
        description: group unique identifier
        required: true
        type: integer
    get:
      description: Return direct methods data with given ID group
      tags:
        - group
      responses:
        200:
          description: An Object of the direct methods
          schema:
            type: object
            items:
              $ref: '#/definitions/DirectMethodList'
            example: 
              $ref: '#/externalDocs/x-mocks/DirectMethodList'

definitions:
  Group:
    type: object
    properties:
      tenantId:
        type: string
        description: Unique identifier representing a specific tenant.
      groupId:
        type: integer
        description: Unique identifier representing a specific tenant group.
      groupName:
        type: string
        description: Name of group.
      description:
        type: string
        description: Description of group.
      deviceIdList:
        type: string
        description: id of devices belong to this group.
      count:
        type: integer
        description: Devices count.
      devices:
        type: array
        items:
          $ref: '#/definitions/Device'
        description: Devices belong to this group
      createdAt:
        type: string
        description: Device created time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      updatedAt:
        type: string
        description: Device updated time, ISO data format, like '2018-08-12T20:17:46.384Z'.

  GroupCreate:
    type: object
    required:
      - groupName
      - description
    properties:
      groupName:
        type: string
        description: Group name.
      description:
        type: string
        description: Group descripton.
      deviceIdList:
        type: array
        items:
          type: string
        description: Device UUID list.    

  GroupUpdate:
    type: object
    properties:
      groupName:
        type: string
        description: Group name.
      description:
        type: string
        description: Group descripton.
      deviceIdList:
        type: array
        items:
          type: string
        description: Device UUID list.

  GroupResponse:
    type: object
    properties:
      tenantId:
        type: string
        description: Unique identifier representing a specific tenant.
      groupId:
        type: integer
        description: Unique identifier representing a specific tenant group.
      groupName:
        type: string
        description: Name of group.
      description:
        type: string
        description: Description of group.
      deviceIdList:
        type: string
        description: id of devices belong to this group.
      creator:
        type: string
        description: Creator of group.
      createdAt:
        type: string
        description: Device created time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      updater:
        type: string
        description: Updater of group.
      updatedAt:
        type: string
        description: Device updated time, ISO data format, like '2018-08-12T20:17:46.384Z'.

externalDocs:
  url: 'http://#'
  x-mocks:
    Group:
      {
        "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "groupId": 1,
        "groupName": "moxa",
        "description": "moxa group",
        "count": 1,
        "devices": [
          {
            "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
            "deviceId": "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59",
            "deviceName": "moxa",
            "modelName": "UC-8112-LX-CG",
            "deviceType": "IIoT Gateway",
            "mac": "00-0C-29-70-D2-EC",
            "serialNumber": "",
            "groupList": [
              {
                "id": 2,
                "name": "A123",
                "description": "A123"
              },
              {
                "id": 4,
                "name": "MOXA-ISS",
                "description": "MOXA-ISS"
              }
            ],
            "connectionStatus": "online",
            "creator": {
              "avatar": "https://www.moxa.com/images/avatar/7dc93587-5444-48bf-a196-da811c39959d.jpg",
              "displayName": "Cain Chen",
              "email": "cainhc.chen@moxa.com",
              "userId": "7dc93587-5444-48bf-a196-da811c39959d"
            },
            "createdAt": "2018-08-12T20:17:46.384Z",
            "updater": {
              "avatar": "https://www.moxa.com/images/avatar/7dc93587-5444-48bf-a196-da811c39959d.jpg",
              "displayName": "Cain Chen",
              "email": "cainhc.chen@moxa.com",
              "userId": "7dc93587-5444-48bf-a196-da811c39959d"
            },
            "updatedAt": "2018-08-12T20:17:46.384Z"
          }
        ]
      }
    GroupList:
      {
        "count": 5,
        "offset": 0,
        "limit": 100,
        "data":
          [
            {
              "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
              "groupId": 1,
              "groupName": "moxa",
              "description": "moxa group",
              "count": 1,
              "devices": [
                {
                  "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
                  "deviceId": "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59",
                  "deviceName": "moxa",
                  "modelName": "UC-8112-LX-CG",
                  "deviceType": "IIoT Gateway",
                  "mac": "00-0C-29-70-D2-EC",
                  "serialNumber": "",
                  "groupList": [
                    {
                      "id": 2,
                      "name": "A123",
                      "description": "A123"
                    },
                    {
                      "id": 4,
                      "name": "MOXA-ISS",
                      "description": "MOXA-ISS"
                    }
                  ],
                  "connectionStatus": "online",
                  "creator": "Cain Chen",
                  "createdAt": "2018-08-12T20:17:46.384Z",
                  "updater": "",
                  "updatedAt": "2018-08-12T20:17:46.384Z"
                }
              ]
            }
          ]
      }
    GroupCreate:
      {
        "groupName": "moxa3",
        "description": "moxa group3",
        "deviceIdList": ["a960aa2b-67ab-4bd3-a85e-a006aeb7fa0b", "91cc56a9-1159-4913-b5f2-ac482cd68ee6"]
      }
    GroupUpdate:
      {
        "groupName": "moxa4",
        "description": "moxa group4",
        "deviceIdList": ["570d0573-b2e3-4304-9136-cfeb2dfb4695"]
      }
    GroupResponse:
      {
        "tenantId": "ed31872d-b57e-4c94-a989-c2782c0d3fe7",
        "groupId": 11,
        "groupName": "201902270912",
        "description": "test",
        "deviceIdList": [
            "ac2f885e-222f-4aa9-afba-0888c7151aba",
            "c4d42f3c-2cf5-464f-b6bd-370465323d1f"
        ],
        "createdAt": "2019-02-27T01:58:42.967276Z",
        "creator": {
            "avatar": "https://www.moxa.com/images/avatar/7dc93587-5444-48bf-a196-da811c39959d.jpg",
            "displayName": "Cain Chen",
            "email": "cainhc.chen@moxa.com",
            "userId": "7dc93587-5444-48bf-a196-da811c39959d"
        },
        "updatedAt": "2019-02-27T01:58:42.967276Z",
        "updater": {
            "avatar": "https://www.moxa.com/images/avatar/7dc93587-5444-48bf-a196-da811c39959d.jpg",
            "displayName": "Cain Chen",
            "email": "cainhc.chen@moxa.com",
            "userId": "7dc93587-5444-48bf-a196-da811c39959d"
        }
      }
    DevicePocList:
      {
        "count": 3,
        "offset": 0,
        "limit": 100,
        "data": [
          {
            "deviceId": "a960aa2b-67ab-4bd3-a85e-a006aeb7fa0b",
            "deviceName": "UC-8112-LX",
            "mac": "81-CF-1C-14-3E-4C",
            "modelName": "UC-8112-LX",
            "connectionStatus": "online",
            "lastUpdatedAt": "2018-08-12T20:17:46.384Z"
          },
          {
            "deviceId": "91cc56a9-1159-4913-b5f2-ac482cd68ee6",
            "deviceName": "UC-8112-LX",
            "mac": "67-88-DE-3C-F1-54",
            "modelName": "UC-8112-LX",
            "connectionStatus": "online",
            "lastUpdatedAt": "2018-08-12T20:17:46.384Z"            
          },
          {
            "deviceId": "47c03400-3e45-466d-abd4-4e01199cd67a",
            "deviceName": "UC-8112-LX",
            "mac": "DF-FE-F1-9E-FF-76",
            "modelName": "UC-8112-LX",
            "connectionStatus": "online",
            "lastUpdatedAt": "2018-08-12T20:17:46.384Z"            
          }
        ]
      }
    DirectMethodList:
      {    
        "directMethodList": [
          {
            "methodName": "reboot",
            "displayName": "Reboot",
            "description": "Reboot IoT Device immediately",
            "userInput": []
          },
          {
            "methodName": "rebootAt",
            "displayName": "Reboot At",
            "description": "Reboot IoT Device at a specific date time",
            "userInput": [
              {
                "parameter": "executeAt",
                "value": "",
                "dataType": "datetime",
                "description": "UTC time with ISO 8601 format"
              }
            ]
          }
        ]      
      }
    