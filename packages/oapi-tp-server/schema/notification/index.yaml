swagger: '2.0'

info:
  version: 0.0.0
  title: ThingsPro Server RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
securityDefinitions:
  mx-api-token:
    type: apiKey
    name: mx-api-token
    in: header
    description: ThingsPro RESTful API token, The token should be created on web console.

tags:
  - name: notification
    description: Cloud Gateway management

paths:
  /notifications:
    get:
      tags:
        - notification
      security:
        - mx-api-token: []
      description: >-
        return all subscribe notifications
      responses:
        '200':
          description: An array of all subscribe notifications
          schema:
            $ref: '#/definitions/Notification'
            example:
              $ref: '#/externalDocs/x-mocks/Notification'
    post:
      tags:
        - notification
      security:
        - mx-api-token: []
      description: Create (register) a new notification to ThingsPro Cloud Server.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/NotificationCreated'
      responses:
        '200':
          description: reutrn created notification object
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
            example:
              $ref: '#/externalDocs/x-mocks/Notification'
    delete:
      tags:
        - notification
      security:
        - mx-api-token: []
      description: Delete notifications from ThingsPro Cloud Server.
      parameters:
        - name: body
          in: body
          description: Delete uuids
          required: true
          schema:
            $ref: '#/definitions/NotificationUUIDs'
      responses:
        '200':
          description: success

  /notifications/{uuid}':
    parameters:
      - name: uuid
        in: path
        description: Notification unique identifier
        required: true
        type: string
    
    delete:
      tags:
        - notification
      security:
        - mx-api-token: []
      description: Delete notification with given UUID
      responses:
        '204':
          description: success
          
  /notifications/support':
    get:
      security:
        - mx-api-token: []
      tags:
        - notification
      description: Return supported notification protocol and event type
      responses:
        '200':
          description: An Object of the device
          schema:
            type: object
            items:
              $ref: '#/definitions/SupportList'
            example:
              $ref: '#/externalDocs/x-mocks/SupportList'

definitions:
  Notification:
    type: object
    properties:
      uuid:
        type: string
        readOnly: true
        description: Unique identifier representing a specific notification.
      eventType:
        type: string
        description: Description of event type.
        enum:
        - device_online
        - device_offline
        - job_update
        - property_update
      status:
        type: string
        description: Description of status.
        enum:
        - Ready
        - Pending Confirmation
      protocol:
        type: string
        description: Description of supported protocol.
        enum:
        - email
        - http
        - https
        - sms
      endpoint:
        type: string
        description: Description of notification recevier, for protocol is email, this should be email, for protocol is sms, this should be phone, for protocol is http or https, this should be api endpoint, http://api/v1/notification, https://api/v1/notification  
    example:
      $ref: '#/externalDocs/x-mocks/Notification'

  NotificationCreated:
    type: object
    properties:
      eventType:
        type: string
        description: Description of event type.
        enum:
        - device_online
        - device_offline
        - job_update
        - property_update
      protocol:
        type: string
        description: Description of supported protocol.
        enum:
        - email
        - http
        - https
        - sms
      endpoint:
        type: string
        description: Description of notification recevier, for protocol is email, this should be email, for protocol is sms, this should be phone, for protocol is http or https, this should be api endpoint, http://api/v1/notification, https://api/v1/notification  
    example:
      $ref: '#/externalDocs/x-mocks/NotificationCreated'

  SupportList:
    type: object
    properties:
      event:
        type: object
        description: Description of suport event.
      protocol:
        type: object
        description: Description of suport protocol.
    example:
      $ref: '#/externalDocs/x-mocks/SupportList'

  NotificationUUIDs:
    type: array
    items:
      type: string
      description: UUID of notification
      example: ["ded6dd9e-49d9-485b-bac1-da0ca0ae9d70", "3d444fc4-6c80-48b7-a129-79ead8c2cdab"]

externalDocs:
  url: 'http://#'
  x-mocks:
    Notification:
      {
          "endpoint": "test@moxa.com",
          "eventType": "device_online",
          "protocol": "email",
          "status": "Ready",
          "uuid": "3d444fc4-6c80-48b7-a129-79ead8c2cdab"
      }
    NotificationCreated:
      {
          "endpoint": "test@moxa.com",
          "eventType": "device_online",
          "protocol": "email"
      }
    NotificationList:
      [
        {
          "endpoint": "test@moxa.com",
          "eventType": "device_online",
          "protocol": "email",
          "status": "Ready",
          "uuid": "3d444fc4-6c80-48b7-a129-79ead8c2cdab"
        },
        {
          "endpoint": "https://123.abc.com/aa.jsp",
          "eventType": "device_offline",
          "protocol": "https",
          "status": "Pending Confirmation",
          "uuid": "0"
        }
      ]
    SupportList:
      {
        "event":[
          {
            "displayName": "Device online",
            "eventType": "device_online"
          },
          {
            "displayName": "Device offline",
            "eventType": "device_offline"
          },
          {
            "displayName": "Job update",
            "eventType": "job_update"
          },
          {
            "displayName": "Property update",
            "eventType": "property_update"
          }
          ],
        "protocol":[
          {
            "displayName": "EMAIL",
            "id": "email"
          },
          {
            "displayName": "HTTP",
            "id": "http"
          },
          {
            "displayName": "HTTPS",
            "id": "https"
          },
          {
            "displayName": "SMS",
            "id": "sms"
          }
        ]
      }  
    