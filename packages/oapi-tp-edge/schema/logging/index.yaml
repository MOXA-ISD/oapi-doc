swagger: '2.0'

info:
  title: logging service
  description: ThingsPro logging service
  version: '0.0.0'

schemes:
- http
- https
- ws

produces:
- application/json

paths:
  /logs:
    post:
      description: Create new logs.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/LogContents'
      responses:
        200:
          description: success

    get:
      description: Get logs for the specified criteria.
      parameters:
      - in: query
        name: limit
        type: integer
        description: Get the specified number of logs.
      - in: query
        name: started
        type: integer
        description: Get the specified start time of logs.
      - in: query
        name: labels
        type: string
        description: Get the specified labels of logs.
      - in: query
        name: origins
        type: string
        description: Get the specified service of logs.
      - in: query
        name: levels
        type: string
        description: Get the specified levels of logs.
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/LogContents'

  # websocket for user listen event, websocket url: ws://IP:PORT/events
  /event:
    parameters:
    - in: query
      name: labels
      type: string
      description: Get the specified labels of logs.
    - in: query
      name: origins
      type: string
      description: Get the specified service of logs.
    - in: query
      name: levels
      type: string
      description: Get the specified level of logs.
    - in: query
      name: started
      type: integer
      description: Get the specified start time of logs.

definitions:

  LogContents:
    type: array
    items:
      $ref: '#/definitions/LogContent'

  LogContent:
    properties:
      origin:
        type: string
        description: (required) service name
      labels:
        type: array
        items:
          type: string
        description: user define label
      created:
        type: string
        description: log created time
      level:
        type: string
        description: log severity level, level default is info.
        enum:
        - ERROR
        - WARN
        - INFO
        - DEBUG
        - TRACE
      message:
        type: string
        description: (required) log message
    example:
      {
        "origin": "test-app",
        "labels": [
          "label1",
          "label2"
        ],
        "level": "error",
        "message": "I'm not good.", 
        "created": "2018-08-07 10:07:01"
      }