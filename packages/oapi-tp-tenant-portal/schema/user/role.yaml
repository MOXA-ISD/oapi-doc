swagger: '2.0'

info:
  version: 0.0.2
  title: ThingsPro Tenant Portal RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json

tags:
  - name: role
    description: Handles role field data

paths:
  /roles:
    get:
      description: Get all roles data
      responses:
        200:
          description: An array of role
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/RoleList' } }
      tags:
        - role

    post:
      description: Create a new role.
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/RoleReq'
      responses:
        201:
          description: Create role successfully
      tags:
        - role

  /roles/{id}:
    parameters:
      - name: id
        in: path
        description: Role unique identifier
        required: true
        type: string
    get:
      description: Return role data with given ID
      responses:
        200:
          description: An Object of the role
          schema:
            type: object
            items:
              $ref: '#/definitions/Role'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/TenantRole' } }
      tags:
        - role
    put:
      description: Return updated user data with given ID
      parameters:
        - name: body
          in: body
          description: Information of role
          required: true
          schema:
            $ref: '#/definitions/RoleReq'
      responses:
        200:
          description: An Object of the role
          schema:
            type: object
            items:
              $ref: '#/definitions/Role'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/TenantRole' } }
      tags:
        - role
    delete:
      description: Delete role with given ID
      responses:
        204:
          description: success
      tags:
        - role

definitions:
  Role:
    title: Role
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific user.
      roleName:
        type: string
        description: Name of role.
      permission:
        type: array
        items:
          type: object
          items:
            - $ref: '#/definitions/Permission'

  RoleReq:
    title: Role
    type: object
    properties:
      roleName:
        type: string
        description: Name of role.
        maxLength: 30
      description:
        type: string
        description: Description of role.
        maxLength: 200  
      permission:
        type: array
        items:
          type: object
          items:
            - $ref: '#/definitions/Permission'

externalDocs:
  url: 'http://#'
  x-mocks:
    TenantRole:
      {
        "roleId": 1,
        "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "roleName": "System manager",
        "description": "System manager",
        "permission": [
          { "id": 1, "value": 2 },
          { "id": 2, "value": 2 }
        ],
        "userList" : [
          { "userId": 1, "displayName": "Jenkins", "email": "jenkins@moxa.com" },
          { "userId": 2, "displayName": "Brian", "email": "brian@moxa.com" }
        ]
      }
    DeviceRole:
      {
        "roleId": 2,
        "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "roleName": "System manager",
        "description": "System manager",
        "permission": [
          { "id": 1, "value": 2 },
          { "id": 2, "value": 1 }
        ],
        "groupList" : [
          { "groupId": 1, "groupName": "All devices" }
        ],
        "userList" : [
          { "userId": 1, "displayName": "Jenkins", "email": "jenkins@moxa.com" },
          { "userId": 2, "displayName": "Brian", "email": "brian@moxa.com" }
        ]
      }  
    TenantRoleReq: 
      { 
        "roleName": "new role", 
        "description": "description",
        "permission": [
            { "id": 1, "value": 2 },
            { "id": 2, "value": 2 }
        ],
        "userList" : [
          { "userId": 1 }
        ]
      }
    DeviceRoleReq:
      {
        "roleName": "System manager",
        "description": "System manager",
        "permission": [
          { "id": 1, "value": 2 },
          { "id": 2, "value": 1 }
        ],
        "groupList" : [
          { "groupId": 1 }
        ],
        "userList" : [
          { "userId": 1 },
          { "userId": 2 }
        ]
      }    
    RoleList: 
      {
        "tenantRoleList": [
          {
            "roleId": 1,
            "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
            "roleName": "System manager",
            "description": "System manager",
            "permission": [
              { "id": 1, "value": 2 },
              { "id": 2, "value": 2 }
            ],
            "userList" : [
              { "userId": 1, "displayName": "Jenkins", "email": "jenkins@moxa.com" },
              { "userId": 2, "displayName": "Brian", "email": "brian@moxa.com" }
            ]
          }
        ],
        "deviceRoleList": [
          {
            "roleId": 2,
            "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
            "roleName": "System manager",
            "description": "System manager",
            "permission": [
              { "id": 1, "value": 2 },
              { "id": 2, "value": 1 }
            ],
            "groupList" : [
              { "groupId": 1, "groupName": "All devices" }
            ],
            "userList" : [
              { "userId": 1, "displayName": "Jenkins", "email": "jenkins@moxa.com" },
              { "userId": 2, "displayName": "Brian", "email": "brian@moxa.com" }
            ]
          }  
        ] 
    }
