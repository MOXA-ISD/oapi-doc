swagger: '2.0'

info:
  version: 0.0.1
  title: ThingsPro Admin Portal RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
securityDefinitions:
  mx-api-token:
    type: apiKey
    name: mx-api-token
    in: header
    description: ThingsPro RESTful API token, The token should be created on web console.

tags:
  - name: user
    description: Handles user field data

paths:
  '/users':
    get:
      description: Get all users field data
      responses:
        200:
          description: An array of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
          example: 
            $ref: '#/externalDocs/x-mocks/UserList'
      tags:
        - user
      security:
        - mx-api-token: []
    post:
      description: Create a new user.
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UserReq'
      responses:
        201:
          description: Create user successfully
          schema:
            type: object
            properties:
              token:
                type: string
                description: Granted authentication token.
          example:
            token:
              type: string
              description: Granted authentication token.
      tags:
        - user
      security:
        - mx-api-token: []
  /users/{id}:
    parameters:
      - name: id
        in: path
        description: User unique identifier
        required: true
        type: string
    get:
      description: Return user data with given ID
      tags:
        - user
      security:
        - mx-api-token: []
      responses:
        200:
          description: An Object of the user
          schema:
            type: object
            items:
              $ref: '#/definitions/User'
          example: 
            $ref: '#/externalDocs/x-mocks/User'
    put:
      description: Return updated user data with given ID
      parameters:
        - name: body
          in: body
          description: Information of User
          required: true
          schema:
            $ref: '#/definitions/UserReq'
      responses:
        200:
          description: An Object of the user
          schema:
            type: object
            items:
              $ref: '#/definitions/User'
          example: 
            $ref: '#/externalDocs/x-mocks/User'
    delete:
      description: Delete User with given ID
      tags:
        - user
      security:
        - mx-api-token: []
      responses:
        204:
          description: success

definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific user.
      name:
        type: string
        description: Name of user.
      company:
        type: string
        description: Company of user.
      email:
        type: string
        description: Email of user.
      adminRole:
        type: integer
        description: Role of user, 0 is super admin, 1 is admin, 2 is user.
      data:
        type: object
        description: metadata of user.  

  UserReq:
    type: object
    properties:
      name:
        type: string
        description: Name of user.
        maxLength: 50
      password:
        type: string
        description: Password of user.
        maxLength: 255
      company:
        type: string
        description: Company of user.
        maxLength: 50
      email:
        type: string
        description: Email of user.
        maxLength: 254
      adminRole:
        type: integer
        description: AdminRole of user.
      data:
        type: object
        description: metadata of user.    

externalDocs:
  url: 'http://#'
  x-mocks:
    User:
      {
        "id": 1,
        "name": "Moxa",
        "company": "moxa",
        "email": "moxa@moxa.com",
        "adminRole": 0,
        "data": 
          {
            "CUSTOM_FIELD": "CUSTOM_VALUE"
          }
      }
    UserList:
      [
        {
          "id": 1,
          "name": "Moxa",
          "company": "moxa",
          "email": "moxa@moxa.com",
          "adminRole": 0,
          "data": 
            {
              "CUSTOM_FIELD": "CUSTOM VALUE"
            }
        },
        {
          "id": 2,
          "name": "Moxa2",
          "company": "moxa",
          "email": "moxa2@moxa.com",
          "adminRole": 0,
          "data": 
            {
              "CUSTOM_FIELD": "CUSTOM_VALUE"
            }
        }
      ]
    UserReq:
      { 
        "name": "Moxa", 
        "password": "12345678", 
        "company": "moxa", 
        "email": "moxa@moxa.com",
        "adminRole": 0,
        "data": 
          {
            "CUSTOM_FIELD": "CUSTOM_VALUE"
          }
      }
