swagger: '2.0'

info:
  version: 0.0.1
  title: ThingsPro Admin Portal RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json

tags:
  - name: login

paths:
  /login:
    post:
      description: user login
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: 'thingspro@moxa.com'
              password:
                type: string
                example: '12345678'
      responses:
        200:
          description: Return user and token data
          schema:
            $ref: '#/definitions/LoginRes'
            example:
              $ref: '#/externalDocs/x-mocks/LoginRes'
      tags:
        - user

  /logout:
    post:
      description: user logout
      responses:
        200:
          description: user logout
      tags:
        - user

definitions:
  LoginRes:
    type: object
    properties:
      user:
        type: object
        items:
          - $ref: '#/definitions/User'
      token:
        type: string
        description: Granted authentication token.

  Role:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific user.
      name:
        type: string
        description: Name of role.
      description:
        type: string
        description: Description of role.
      admin:
        type: boolean
        description: Admin role.

  User:
    type: object
    properties:
      partnerId:
        type: string
        description: Unique identifier representing a specific partner.
      userId:
        type: string
        description: Unique identifier representing a specific user.
      displayName:
        type: string
        description: Username of user.
      firstName:
        type: string
        description: First name of user.
      lastName:
        type: string
        description: Last name of user.
      avatar:
        type: string
        description: Avatar of user.
      email:
        type: string
        description: Email of user.
      company:
        type: string
        description: Company of user.
      department:
        type: string
        description: Department of user.
      employeeId:
        type: string
        description: Employee Id of user.
      phone:
        type: string
        description: Phone of user.
      status:
        type: string
        description: Enable Status of user.
      data:
        type: object
        description: Metadata of user.
      loginAt:
        type: string
        description: User last login time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      passwordExpireAt:
        type: string
        description: Last change password time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      role:
        type: array
        description: List of role which contains the user.
        items:
          '$ref': '#/definitions/Role'

externalDocs:
  url: 'https://#'
  x-mocks:
    LoginRes:
      {
        user:
          {
            "avatar": "https://thingspro9dev4system.blob.core.windows.net/images/avatar/user/7dc93587-5444-48bf-a196-da811c39959d-20190418113136220103.jpg",
            "company": "moxa",
            "createdAt": "2019-01-22T08:02:49.089379Z",
            "creator": "Cain Chen",
            "data": {},
            "department": "",
            "displayName": "Cain Chen",
            "email": "cainhc.chen@moxa.com",
            "employeeId": "20180003",
            "enabled": true,
            "firstName": "Cain",
            "lastName": "Chen",
            "loginAt": "2019-04-18T07:40:39.074805Z",
            "passwordExpireAt": "2019-04-17T08:56:28.014865Z",
            "phone": "02-89191230#7262",
            "updatedAt": "2019-04-18T03:31:35.501798Z",
            "updater": "",
            "userId": "7dc93587-5444-48bf-a196-da811c39959d"
          },
        token: "USER_TOKEN"
      }
