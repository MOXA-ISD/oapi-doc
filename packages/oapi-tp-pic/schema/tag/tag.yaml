swagger: '2.0'

info:
  version: 0.0.0
  title: ThingsPro PIC service RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
tags:
  - name: tag
    description: Handle tags data

paths:
  /tags:
    get:
      description: Get all tags data
      tags:
        - tag
      parameters:
        - name: tag
          in: query
          description: Filter the tag list by tag name
          required: false
          type: string
        - name: status
          in: query
          description: Filter the tag list by status
          required: false
          type: string     
        - name: customer
          in: query
          description: Filter the tag list by customer
          required: false
          type: string    
        - name: order
          in: query
          description: The tag list order by some keyword. default is order by tag name
          required: false
          type: string
          enum:
          - tag
          - customer
          - status
        - name: sort
          in: query
          description: Sorting the filter tag list, default is asc
          required: false
          type: string
          enum:
          - desc
          - asc
        - name: limit
          in: query
          description: max return tags count (default is 100 and max is 1000)
          required: false
          type: integer
        - name: offset
          in: query
          description: offset
          required: false
          type: integer
      responses:
        200:
          description: An array of tags
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
            example:
              $ref: '#/externalDocs/x-mocks/TagList'
    post:
      description: Create a new tag.
      tags:
        - tag
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagCreate'
      responses:
        201:
          description: Create tag successfully
          schema:
            type: object
            items:
              $ref: '#/definitions/Tag'
            example:
              $ref: '#/externalDocs/x-mocks/Tag'

  /tags/{tagId}:
    parameters:
      - name: tagId
        in: path
        description: tag unique identifier
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/TagUpdate'
    patch:
      description: Update tag data
      tags:
        - tag
      responses:
        200:
          description: Update tag sucess

definitions:
  Tag:
    type: object
    properties:
      id:
        type: integer
        description: Tag id.
      tag:
        type: string
        description: Tag name.
      scenarioId:
        type: integer
        description: Scenario id.
      customerId:
        type: integer
        description: Customer id.
      data:
        type: object
        description: Tag data.
      status:
        type: string
        enum:
          - active
          - inactive
          - failure
        description: Auto provision status.
      updatedAt:
        type: string
        description: tag last updated time, ISO data format, like '2018-08-12T20:17:46.384Z'.
  TagCreate:
    type: object
    required:
    - tag
    - scenarioId
    - customerId
    - data
    properties:
      tag:
        type: string
        description: Tag name.
      scenarioId:
        type: integer
        description: Scenario id.
      customerId:
        type: integer
        description: Customer id.
      data:
        type: object
        description: Tag data.
  TagUpdate:
    type: object
    description: User can update tag, scenarioId, customerId, data, status separtely
    properties:
      scenarioId:
        type: integer
        description: Scenario id.
      customerId:
        type: integer
        description: Customer id.
      data:
        type: object
        description: Tag data.
      status:
        type: string
        enum:
          - active
          - inactive
        description: Auto provision status.

externalDocs:
  url: 'http://#'
  x-mocks:
    Tag:
      {
        "id": 1,
        "tag": "moxa",
        "scenarioId": 1,
        "customerId": 1,
        "data": 
        {
          "credential": "xxx"
        },
        "status": "active",
        "updatedAt": "2019-03-26T07:51:35.663935Z"
      }
    TagCreate:
      {
        "tag": "moxa",
        "scenarioId": 1,
        "customerId": 1,
        "data": 
        {
          "credential": "xxx"
        }
      }
    TagUpdate:
      {
        "scenarioId": 1,
        "customerId": 1,
        "data": 
        {
          "credential": "xxx"
        },
        "status": "inactive"
      }
    TagList:
      {
        "count": 28,
        "data": [
          {
            "id": 1,
            "tag": "moxa",
            "scenarioId": 1,
            "customerId": 1,
            "data": 
            {
              "credential": "xxx"
            },
            "status": "active",
            "updatedAt": "2019-03-26T07:51:35.663935Z"
          }
        ],
        "limit": 100,
        "offset": 20
      }
    