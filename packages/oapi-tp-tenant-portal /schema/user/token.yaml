swagger: '2.0'

info:
  version: 0.0.1
  title: ThingsPro Admin Portal RESTful API reference
basePath: '/tenant-api/v1'
schemes:
  - http
  - https
produces:
  - application/json

tags:
  - name: token
    description: Handles token field data

paths:
  '/tenants/{tenantId}/tokens':
    parameters:
      - name: tenantId
        in: path
        description: Tenant unique identifier
        required: true
        type: string
    get:
      description: Get all tokens field data
      responses:
        200:
          description: An array of tokens
          schema:
            type: array
            items:
              $ref: '#/definitions/Token'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/TokenList' } }
      tags:
        - token
    post:
      description: Create a new token.
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/TokenReq'
      responses:
        201:
          description: Create token successfully
      tags:
        - token

  /tenants/{tenantId}/tokens/{id}:
    parameters:
      - name: tenantId
        in: path
        description: Tenant unique identifier
        required: true
        type: string
      - name: id
        in: path
        description: Token unique identifier
        required: true
        type: string
    get:
      description: Return token data with given ID
      responses:
        200:
          description: An Object of the token
          schema:
            type: object
            items:
              $ref: '#/definitions/Token'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/Token' } }
      tags:
        - token
    put:
      description: Return updated token data with given ID
      parameters:
        - name: body
          in: body
          description: Information of token
          required: true
          schema:
            $ref: '#/definitions/TokenReq'
      responses:
        200:
          description: An Object of the token
          schema:
            type: object
            items:
              $ref: '#/definitions/Token'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/Token' } }
      tags:
        - token
    delete:
      description: Delete token with given ID
      responses:
        204:
          description: success
      tags:
        - token

definitions:
  Token:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific token.
      name:
        type: string
        description: Name of token.
      content:
        type: string
        description: Content of token.
      role:
        type: object
        items:
          - $ref: '#/definitions/Role'

  TokenReq:
    type: object
    properties:
      name:
        type: string
        description: Name of token.
      roleId:
        type: integer
        description: Unique identifier associated with a role.

externalDocs:
  url: 'http://#'
  x-mocks:
    Token:
      {
        "id": 1,
        "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "name": "TOKEN_NAME",
        "content": "YOUR_TOKEN",
        "role":
          {
            "id": 1,
            "name": "root",
            "permissions":
              [
                { "id": 1, "value": 2, "name": "DM", "description": "xxxxx" },
                { "id": 2, "value": 2, "name": "account", "description": "xxxxx" }
              ]
          }
      }
    TokenList:
      [
        { "id": 1, "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b", "name": "TOKEN_NAME_1", "content": "YOUR_TOKEN_2", "roleId": 1 },
        { "id": 2, "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b", "name": "TOKEN_NAME_2", "content": "YOUR_TOKEN_2", "roleId": 3 }
      ]
    TokenReq: { "name": "TOKEN_NAME", "roleId": 1 }
