swagger: '2.0'

info:
  version: 0.0.0
  title: ThingsPro PIC service RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
tags:
  - name: device
    description: Handles device enroll and register function

paths:
  /register:
    post:
      description: Register device on PIC service and return IOT connection data
      tags:
        - device
      responses:
        200:
          description: Connect device sucess
          schema:
            type: object
            items:
              $ref: '#/definitions/RegisterRes'
            example:
              $ref: '#/externalDocs/x-mocks/RegisterRes'
    delete:
      description: Unregister device on a PIC service
      tags:
        - device
      responses:
        204:
          description: Unregister device success

  /enroll:
    parameters:
      - name: body
        in: body
        description: ''
        required: true
        schema:
          $ref: '#/definitions/EnrollReq'
    post:
      description: Let device enrolls on PIC service
      tags:
        - device
      responses:
        200:
          description: Enroll device sucess
          schema:
            type: object
            items:
              $ref: '#/definitions/EnrollRes'
            example:
              $ref: '#/externalDocs/x-mocks/EnrollRes'

  /batchEnroll:
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/BatchEnrollReq'
    post:
      description: Enroll a group of devices to PIC service
      tags:
        - device
      responses:
        200:
          description: Enroll device sucess
          schema:
            type: object
            items:
              $ref: '#/definitions/BatchEnrollRes'
            example:
              $ref: '#/externalDocs/x-mocks/BatchEnrollRes'

definitions:
  Device:
    type: object
    properties:
      mac:
        type: string
        description: Device mac.
      serialNumber:
        type: string
        description: Device serial number.
      projectId:
        type: string
        description: project id.   
      modelName:
        type: string
        description: Device model name.   
      deviceId:
        type: string
        description: Device uuid.
      status:
        type: string
        enum:
        - registered
        - enrolled
        - invalidCA
        description: status.  
      enrolledAt:
        type: string
        description: Device enrolled time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      registeredAt:
        type: string
        description: Device registered time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      connecteddAt:
        type: string
        description: Device last connected time, ISO data format, like '2018-08-12T20:17:46.384Z'.

  RegisterRes:
    type: object
    properties:
      error:
        type: object
        description: If http status code is not 200, user sholud reference this reason to identify failure reason.
        properties:
          code:
            type: integer
            description: |
              If http status code is not 200, user should reference this value to identify failure reason. 
          reason:
            type: string
            description: If http status code is not 200, user sholud reference this reason to identify failure reason.
      data:
        type: object
        description: IOT connection data.   
        properties:
          scenario:
            type: string
            enum:
              - azure_iot_hub
              - aws_iot_core
            description: Cloud provider type
          hostname:
            type: string
            description: IOT connection hostname.  
          authType:
            type: string
            description: Auth type, x509 is default  
      registerCA:
        type: object
        description: Device register certificate
        properties:
          registerPK:
            type: string
            description: Private key.
          registerCert:
            type: string
            description: Certificate.
      newEnrollCA:
        type: object
        description: PIC will generate new certificate, if the old certificate expired
        properties:
          enrollPK:
            type: string
            description: Private key.
          enrollCert:
            type: string
            description: Certificate.
  EnrollReq:
    type: object
    required:
    - mac
    - serialNumber
    - modelName
    properties:
      mac:
        type: string
        description: Device mac.
      serialNumber:
        type: string
        description: Device serial number.
      modelName:
        type: string
        description: Deice model name.    
      tag:
        type: string
        description: Device tag.  
  BatchEnrollReq:
    type: array
    items:
      '$ref': '#/definitions/EnrollReq'
  EnrollRes:
    type: object
    properties:
      deviceId:
        type: string
        description: Device id.
      mac:
        type: string
        description: Device mac.
      enrollPK:
        type: string
        description: Private key.
      enrollCert:
        type: string
        description: Certificate.
  BatchEnrollRes:
    type: array
    items:
      '$ref': '#/definitions/EnrollReq'

externalDocs:
  url: 'http://#'
  x-mocks:
    RegisterRes:
      {
        "error": {
          "code": 100,
          "reason": "Register failure reason"
        },
        "data": 
          {
            "scenario": "aws_iot_core",
            "hostname": "http://www.moxa.com",
            "authType": "x509"
          },
        "registerCA": 
          {
            "registerPK": "moxa",
            "registerCert": "moxa"
          },
        "newEnrollCA": 
          {
            "enrollPK": "moxa",
            "enrollCert": "moxa"
          }
      }  
    EnrollReq:
      {
        "mac": "001122334455",
        "serialNumber": "12345678",
        "modelName": "UC-8112",
        "projectId": "1234"
      }
    EnrollRes:
      {
        "deviceId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "enrollPK": "moxa",
        "enrollCert": "moxa"
      }
    BatchEnrollRes:
      [
        {
          "mac": "001122334455",
          "enrollPK": "moxa",
          "enrollCert": "moxa"
        }
      ]
