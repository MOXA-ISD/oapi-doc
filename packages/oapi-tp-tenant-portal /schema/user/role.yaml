swagger: '2.0'

info:
  version: 0.0.1
  title: ThingsPro Tenant Portal RESTful API reference
basePath: '/tenant-api/v1'
schemes:
  - http
  - https
produces:
  - application/json

tags:
  - name: role
    description: Handles role field data

paths:
  /roles:
    get:
      description: Get all roles data
      responses:
        200:
          description: An array of role
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/RoleList' } }
      tags:
        - role

    post:
      description: Create a new role.
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/RoleReq'
      responses:
        201:
          description: Create role successfully
      tags:
        - role

  /roles/{id}:
    parameters:
      - name: id
        in: path
        description: Role unique identifier
        required: true
        type: string
    get:
      description: Return role data with given ID
      responses:
        200:
          description: An Object of the role
          schema:
            type: object
            items:
              $ref: '#/definitions/Role'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/Role' } }
      tags:
        - role
    put:
      description: Return updated user data with given ID
      parameters:
        - name: body
          in: body
          description: Information of role
          required: true
          schema:
            $ref: '#/definitions/RoleReq'
      responses:
        200:
          description: An Object of the role
          schema:
            type: object
            items:
              $ref: '#/definitions/Role'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/Role' } }
      tags:
        - role
    delete:
      description: Delete role with given ID
      responses:
        204:
          description: success
      tags:
        - role

definitions:
  Role:
    title: Role
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific user.
      name:
        type: string
        description: Name of role.
      permissions:
        type: array
        items:
          type: object
          items:
            - $ref: '#/definitions/Permission'

  RoleReq:
    title: Role
    type: object
    properties:
      name:
        type: string
        description: Name of role.
      permissions:
        type: array
        items:
          type: object
          items:
            - $ref: '#/definitions/Permission'

externalDocs:
  url: 'http://#'
  x-mocks:
    Role:
      {
        "id": 1,
        "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "name": "root",
        "permissions":
          [
            { "id": 1, "value": 2, "name": "DM", "description": "xxxxx" },
            { "id": 2, "value": 2, "name": "account", "description": "xxxxx" }
          ]
      }
    RoleReq: { 
      "name": "new role", 
      "permissions": [
          { "id": 1, "value": 2 }, 
          { "id": 2, "value": 2 }
        ] 
      }
    RoleList:
      [
        {
          "id": 1,
          "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
          "name": "root",
          "permissions":
            [
              { "id": 1, "value": 2, "name": "DM", "description": "xxxxx" },
              { "id": 2, "value": 2, "name": "account", "description": "xxxxx" }
            ]
        },
        {
          "id": 2,
          "name": "admin",
          "permissions": [{ "id": 1, "value": 0, "name": "user management", "description": "xxxxx" }]
        }
      ]

