swagger: '2.0'

info:
  version: 0.0.0
  title: DLM Company Portal RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
tags:
  - name: project
    description: Handles projects data

paths:
  /enroll:
    post:
      description: Return enroll certificate and key
      tags:
        - device
      parameters:
        - name: body
          in: body
          description: Information of device
          required: true
          schema:
            $ref: '#/definitions/EnrollReq'
      responses:
        200:
          description: Response enroll certificate and key
          schema:
            type: object
            items:
              $ref: '#/definitions/EnrollRes'
            example: 
              $ref: '#/externalDocs/x-mocks/EnrollRes'
    delete:
      description: Unenroll device
      tags:
        - device
      responses:
        204:
          description: success

  /register:
    post:
      description: Return register certificate and key
      tags:
        - device
      parameters:
        - name: body
          in: body
          description: Information of device
          required: true
          schema:
            $ref: '#/definitions/RegisterReq'
      responses:
        200:
          description: Response register certificate and key and connection information
          schema:
            type: object
            items:
              $ref: '#/definitions/RegisterRes'
            example: 
              $ref: '#/externalDocs/x-mocks/RegisterRes'
    delete:
      description: Unregister device
      tags:
        - device
      responses:
        204:
          description: success
  /batchEnroll:
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/BatchEnrollReq'
    post:
      description: Enroll a group of devices to PIC service
      tags:
        - device
      responses:
        200:
          description: Enroll device sucess
          schema:
            type: object
            items:
              $ref: '#/definitions/BatchEnrollRes'
            example:
              $ref: '#/externalDocs/x-mocks/BatchEnrollRes'
definitions:
  EnrollReq:
    type: object
    required:
    - mac
    - serialNumber
    - modelName
    - projectId
    properties:
      mac:
        type: string
        description: Device mac.
      serialNumber:
        type: string
        description: Device serial number.  
      modelName:
        type: string
        description: Device model name. 
      projectId:
        type: string
        description: project unique identifier
  EnrollRes:
    type: object
    description: Return enroll PK and cert, the default mode is hyperlink mode, server will response(enrollPKLink + enrollCertLink), if mode=text in query string, server will response (enrollPK + enrollCert)
    properties:
      deviceId:
        type: string
        description: Device id.
      enrollPK:
        type: string
        description: Private key.
      enrollCert:
        type: string
        description: Certificate.
  BatchEnrollReq:
    type: array
    items:
      '$ref': '#/definitions/EnrollReq'
  BatchEnrollRes:
    type: array
    items:
      '$ref': '#/definitions/EnrollReq'
  RegisterReq:
    type: object
    required:
    - mac
    - serialNumber
    - modelName
    properties:
      mac:
        type: string
        description: Device mac.
      serialNumber:
        type: string
        description: Device serial number.  
      modelName:
        type: string
        description: Device model name. 
  RegisterRes:
    type: object
    description: Return enroll PK and cert, the default mode is hyperlink mode, server will response(enrollPKLink + enrollCertLink), if mode=text in query string, server will response (enrollPK + enrollCert)
    properties:
      projectId:
        type: string
        description: project unique identifier
      projectName:
        type: string
        description: project name
      deviceId:
        type: string
        description: Device id.
      registerCA:
        type: object
        description: Device register certificate
        properties:
          registerPK:
            type: string
            description: Private key.
          registerCert:
            type: string
            description: Certificate.
      newEnrollCA:
        type: object
        description: Enroll cert and private key, Only send when old cert will expire nearby
        properties:
          enrollPK:
            type: string
            description: Private key.
          enrollCert:
            type: string
            description: Certificate.
      data:
        type: object
        description: information for connect to cloud
        properties:
          scenario:
            type: string
            enum:
              - aws_iot_core
            description: Cloud provider type
          hostname:
            type: string
            description: IOT connection hostname.  
          authType:
            type: string
            description: Auth type, x509 is default  
      error:
        type: object
        description: If http status code is not 200, user sholud reference this reason to identify failure reason.
        properties:
          code:
            type: integer
            description: |
              If http status code is not 200, user should reference this value to identify failure reason. 
              100: Bad request
              101: Caonnt find project
              102: Project status is not active
              103: Deivce is already registered
              104: Device is not enrolled
              105: Certificate expired
              106: Device serial number or mac is not matched with certificate
              107: Register certificate error
              108: Not support model name
              109: Invlalid certificate
          message:
            type: string
            description: If http status code is not 200, user sholud reference this reason to identify failure reason.
            
externalDocs:
  url: 'http://#'
  x-mocks:
    EnrollReq:
      {
        "mac": "001122334455",
        "serialNumber": "12345678",
        "modelName": "UC-8112A-ME-T-LX",
        "projectId": "65af94c4-07e4-43d7-abad-3cb5f295550b"
      }
    EnrollRes:
      {
        "deviceId": "65af94c4-07e4-43d7-abad-3cb5f295550b",

        "enrollPK": "moxa",
        "enrollCert": "moxa"
      }
    RegisterReq:
      {
        "mac": "001122334455",
        "serialNumber": "12345678",
        "modelName": "UC-8112A-ME-T-LX"
      }
    RegisterRes:
      {
        "projectId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "projectName": "test",
        "data": 
          {
            "scenario": "aws_iot_core",
            "hostname": "http://www.moxa.com",
            "authType": "x509"
          },
        "registerCA": 
          {
            "registerPK": "moxa",
            "registerCert": "moxa"
          },
        "error": {
          "code": 100,
          "message": "Register failure reason"
        },
        "newEnrollCA": 
          {
            "enrollPK": "moxa",
            "enrollCert": "moxa"
          }
      }  
    BatchEnrollReq:
      {
        "projectId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "deviceList": [
          {
            "mac": "001122334455",
            "serialNumber": "12345678",
            "modelName": "UC-8112A-ME-T-LX"
          }
        ]
      }
    BatchEnrollRes:
      [
        {
          "deviceId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
          "mac": "001122334455",
          "enrollPK": "moxa",
          "enrollCert": "moxa"
        }
      ]
      
    