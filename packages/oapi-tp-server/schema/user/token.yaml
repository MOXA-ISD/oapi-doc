swagger: '2.0'

info:
  version: 2.1.0
  title: ThingsPro Gateway RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
securityDefinitions:
  mx-api-token:
    type: apiKey
    name: mx-api-token
    in: header
    description: ThingsPro RESTful API token, The token should be created on web console.

tags:
  - name: token
    description: Handles token field data

paths:
  '/tokens':
    get:
      description: Get all tokens field data
      responses:
        200:
          description: An array of tokens
          schema:
            type: array
            items:
              $ref: '#/definitions/Token'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/TokenList' } }
      tags:
        - token
      security:
        - mx-api-token: []
    post:
      description: Create a new token.
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/TokenReq'
      responses:
        201:
          description: Create token successfully
      tags:
        - token
      security:
        - mx-api-token: []
    delete:
      description: Delete multiple tokens.
      parameters:
        - name: body
          in: body
          description: Delete user ids
          required: true
          schema:
            $ref: '#/definitions/ObjectIDs'
      responses:
        204:
          description: success
      tags:
        - token
      security:
        - mx-api-token: []
  /tokens/{id}:
    parameters:
      - name: id
        in: path
        description: Token unique identifier
        required: true
        type: string
    get:
      description: Return token data with given ID
      responses:
        200:
          description: An Object of the token
          schema:
            type: object
            items:
              $ref: '#/definitions/Token'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/Token' } }
      tags:
        - token
      security:
        - mx-api-token: []
    put:
      description: Return updated token data with given ID
      parameters:
        - name: body
          in: body
          description: Information of token
          required: true
          schema:
            $ref: '#/definitions/TokenReq'
      responses:
        200:
          description: An Object of the token
          schema:
            type: object
            items:
              $ref: '#/definitions/Token'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/Token' } }
      tags:
        - token
      security:
        - mx-api-token: []
    delete:
      description: Delete token with given ID
      responses:
        204:
          description: success
      tags:
        - token
      security:
        - mx-api-token: []

definitions:
  Token:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific token.
      name:
        type: string
        description: Name of token.
      content:
        type: string
        description: Content of token.
      role:
        type: object
        items:
          - $ref: '#/definitions/Role'

  TokenReq:
    type: object
    properties:
      name:
        type: string
        description: Name of token.
      roleId:
        type: integer
        description: Unique identifier associated with a role.

  ObjectIDs:
    type: array
    items:
      type: string
      description: ID of object
      example: ["1", "2"]

externalDocs:
  url: 'http://#'
  x-mocks:
    Token:
      {
        'id': 1,
        'name': 'TOKEN_NAME',
        'content': 'YOUR_TOKEN',
        'role':
          {
            'id': 1,
            'name': 'root',
            'permissions':
              [
                { 'id': 1, 'value': 2, 'name': 'DM', 'description': 'xxxxx' },
                { 'id': 2, 'value': 2, 'name': 'account', 'description': 'xxxxx' },
              ],
          },
      }
    TokenList:
      [
        { 'id': 1, 'name': 'TOKEN_NAME_1', 'content': 'YOUR_TOKEN_2', 'roleId': 1 },
        { 'id': 2, 'name': 'TOKEN_NAME_2', 'content': 'YOUR_TOKEN_2', 'roleId': 3 },
      ]
    TokenReq: { 'name': 'TOKEN_NAME', 'roleId': 1 }
