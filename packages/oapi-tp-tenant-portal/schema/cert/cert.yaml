swagger: '2.0'

info:
  version: 0.0.0
  title: ThingsPro Tenant Portal RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
tags:
  - name: certificate
    description: Handles certificate apply function

paths:
  /certificates:
    get:
      description: Get all certificates data
      parameters:
        - name: modelName
          in: query
          type: string
          description: Filter the certificates list by modelName
          required: false
        - name: mac
          in: query
          type: string
          description: Filter the certificates list by mac
          required: false
        - name: applyStatus
          in: query
          type: string
          description: Filter the certificates list by apply status
          required: false
        - name: order
          in: query
          description: Sort the group list by specific condition, default is order by 'createdAt'
          required: false
          type: string
          enum:
          - modelName
          - mac
          - applyStatus
          - createdAt
        - name: sort
          in: query
          description: Sorting the filter group list, default is desc
          required: false
          type: string
          enum:
          - desc
          - asc
        - name: limit
          in: query
          description: max return groups count (default is 100 and max is 1000)
          required: false
          type: integer
        - name: offset
          in: query
          description: offset
          required: false
          type: integer
      responses:
        200:
          description: An array of apply certificates 
          schema:
            type: array
            items:
              $ref: '#/definitions/Cert'
            example: 
              $ref: '#/externalDocs/x-mocks/CertList'
      tags:
        - certificate
    post:
      description: Create a new certificate.
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            type: object
            items:
              $ref: '#/definitions/CertCreate'
            example:
              $ref: '#/externalDocs/x-mocks/CertCreate'    
      responses:
        201:
          description: Create certificate successfully
          schema:
            type: object
            items:
              $ref: '#/definitions/Cert'
            example: 
              $ref: '#/externalDocs/x-mocks/Cert'
      tags:
        - certificate

  /certificates/{id}/download:
    get:
      description: Request to download certificate.
      parameters:
        - name: id
          in: path
          description: Certificate unique identifier
          required: true
          type: string
      responses:
        200:
          description: Certificate download link 
          schema:
            type: object
            items:
              properties:
                link:
                  type: string
                  description: Certificate download link .
            example: 
              $ref: '#/externalDocs/x-mocks/DownloadLink'
      tags:
        - certificate

definitions:
  Cert:
    type: object
    properties:
      applyId:
        type: string
        description: Unique identifier representing a specific certificate.
      tenantId:
        type: string
        description: Unique identifier representing a specific tenant.
      mac:
        type: string
        description: Mac address of device.
      serialNumber:
        type: string
        description: Serial number of device.
      modelName:
        type: string
        description: Model name of device.  
      note:
        type: string
        description: Certificate apply form note.
      reason:
        type: string
        description: Declined certificate reason.  
      applicant:
        type: string
        description: Certificate applicant.
      applyStatus:
        type: string
        enum:
        - waiting
        - approved
        - declined
        description: Certificate apply status.  
      applyAt:
        type: string
        description: Certificate apply time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      createdAt:
        type: string
        description: Certificate created time, ISO data format, like '2018-08-12T20:17:46.384Z'.
 
  CertCreate:
    type: object
    required:
      - deviceProfileId
      - mac
      - serialNumber
    properties:
      deviceProfileId:
        type: string
        description: ID of device profile.
      mac:
        type: string
        description: Mac address of device.
      serialNumber:
        type: string
        description: Serial number of device.
      note:
        type: string
        description: Mac address of device.

externalDocs:
  url: 'http://#'
  x-mocks:
    Cert:
      {
        "applyId": "1",
        "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "mac": "00-0C-29-70-D2-EC", 
        "serialNumber": "12345678", 
        "modelName": "UC-8112",    
        "note": "test device",
        "reason": "",
        "applicant": "Owen Kao",
        "applyAt": "2018-10-01T08:25:31.422Z",
        "applyStatus": "waiting",
        "createdAt": "2018-10-01T08:25:31.422Z"
      }
    CertList:
      {
        "count": 5,
        "offset": 0,
        "limit": 100,
        "data":
          [
            {
              "applyId": "1",
              "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
              "mac": "00-0C-29-70-D2-EC", 
              "serialNumber": "12345678", 
              "modelName": "UC-8112",    
              "note": "test device",
              "reason": "",
              "applicant": "Owen Kao",
              "applyAt": "2018-10-01T08:25:31.422Z",
              "applyStatus": "waiting",
              "createdAt": "2018-10-01T08:25:31.422Z"
            }
          ]
      }
    CertCreate:
      {
        "deviceProfileId": 1,
        "mac": "00-0C-29-70-D2-EC", 
        "serialNumber": "12345678",
        "note": "test device"
      }
    DownloadLink:
      {
        "path": "https://www.moxa.com"
      }  

