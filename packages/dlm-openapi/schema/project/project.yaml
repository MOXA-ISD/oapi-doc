openapi: 3.0.0
info:
  version: '0.0.0'
  title: 'Device RESTful API reference'
  description: |
    Release Date: 2019/10/22

components:
  schemas:
    Project:
      type: object
      properties:
        projectId:
          type: string
          description: Unique identifier representing a specific project.
        name:
          type: string
          description: Project name of project.
        status:
          type: string
          enum:
            - enable
            - disable
            - removed
          description: Status of project.
        createdAt:
          type: string
          description: project created time,ISO data format, like '2018-08-12T20:17:46.384Z'. 
    ProjectRes:
      type: object
      properties:
        data:
          type: object
          items:
            $ref: '#/components/schemas/Project'
    ProjectCreate:
      type: object
      properties:
        name:
          type: string
          description: Project name of project.
    ProjectUpdate:
      type: object
      properties:
        name:
          type: string
          description: Project name of project.
        status:
          type: string
          enum:
            - enable
            - disable
            - removed
          description: Status of project.
    EnrollCreate:
      type: object
      required:
      - mac
      - serialNumber
      - modelName
      description: Device connection data payload
      properties:
        mac:
          type: string
          description: Device mac.
        serialNumber:
          type: string
          description: Device serial number.  
        modelName:
          type: string
          description: Device model name.
    EnrollRes:
      type: object
      description: Return enroll PK and cert, the default mode is hyperlink mode, server will response(enrollPKLink + enrollCertLink), if mode=text in query string, server will response (enrollPK + enrollCert)
      properties:
        deviceId:
          type: string
          description: Device id.
        enrollPK:
          type: string
          description: Private key.
        enrollCert:
          type: string
          description: Certificate.
        enrollPKLink:
          type: string
          description: Private key.
        enrollCertLink:
          type: string
          description: Certificate.
    JobReq:
      type: object
      required:
        - deviceIdList
        - method
        - content
      properties:
        deviceIdList:
          type: array
          description: List of deviceId.
          items:
            type: string
        action:
          type: string
          enum:
            - rebootAt
            - rebootNow
          description: action, only support rebootAt, rebootNow.       
        content:
          type: object
          description: For reboot, please refer to RebootNow and RebootAt
  examples:
    Project:
      summary: cellular information
      value:
        {
          "projectId": "ed31872d-b57e-4c94-a989-c2782c0d3fe7",
          "name": "MOXA",
          "status": "enable",
          "createdAt": "2019-03-08T07:18:27:565Z"
        }
    ProjectRes:
      summary: cellular information
      value:
        {
          "data": {
            "projectId": "ed31872d-b57e-4c94-a989-c2782c0d3fe7",
            "name": "MOXA",
            "status": "enable",
            "createdAt": "2019-03-08T07:18:27:565Z"
          }
        }  
    ProjectList:
      summary: cellular information
      value:
        {
          "count": 13,
          "data": [
            {
              "projectId": "ed31872d-b57e-4c94-a989-c2782c0d3fe7",
              "name": "MOXA",
              "status": "enable",
              "createdAt": "2019-03-08T07:18:27:565Z"
            }
          ],
          "limit": 1,
          "offset": 0
        }
    ProjectCreate:
      summary: cellular information
      value:
        {
          "name": "MOXA"
        }
    ProjectUpdate:
      summary: cellular information
      value:
        {
          "name": "MOXA",
          "status": "enable"
        }
    EnrollCreate:
      summary: cellular information
      value:
        {
          "mac": "001122334455",
          "serialNumber": "12345678",
          "modelName": "UC-8112"
        }
    EnrollRes:
      summary: cellular information
      value:
        {
          "data": {
            "deviceId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
            "enrollPK": "moxa",
            "enrollCert": "moxa",
            "enrollPKLink": "http://www.moxa.com/download=12345",
            "enrollCertLink": "http://www.moxa.com/download=abcde"
          }
        }
    BatchEnrollRes:
      summary: cellular information
      value:
        [
          {
            "deviceId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
            "mac": "001122334455",
            "enrollPK": "moxa",
            "enrollCert": "moxa"
          }
        ]
    JobReq:
      summary: cellular information
      value:
        {
          "deviceId": ["346d9463-a60a-4d6a-b419-f59f11e07ff5"],
          "action": "reboot",
          "content": {
            "now": true
          }
        }
    RebootNow: 
      summary: cellular information
      value:
        {
          "now": true
        }
    RebootAt: 
      summary: cellular information
      value:
        {
          "at": {
            "day": "1",
            "dayOfWeek": "*",
            "hour": "12",
            "minute": "0",
            "month": "1"
          },
          "enableScheduler": true
        }

paths:
  /projects:
    get:
      description: Get all projects
      tags:
        - project
      parameters:
        - name: name
          in: query
          description: Filter the project list by project name
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter the project list by project status
          required: false
          schema:
            type: string  
            enum:
            - enable
            - disable
            - removed
        - name: order
          in: query
          description: The project list order by some keyword. default is order by 'createdAt'
          required: false
          schema:
            type: string
            enum:
            - name
            - status
        - name: sort
          in: query
          description: Sorting the filter project list, default is asc
          required: false
          schema:
            type: string
            enum:
            - desc
            - asc
        - name: limit
          in: query
          description: max return projects count (default is 100 and max is 1000)
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: integer
      responses:
        200:
          description: An array of projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
                  count:
                    type: integer
                  offset:
                    type: integer
                  limit:
                    type: integer
              examples: 
                ProjectList:
                  $ref: '#/components/examples/ProjectList'
    post:
      description: Create a new project.
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        201:
          description: Create project successfully
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProjectRes'
              examples:
                ProjectRes:
                  $ref: '#/components/examples/ProjectRes'

  /projects/{projectId}:
    parameters:
      - name: projectId
        in: path
        description: project unique identifier
        required: true
        schema:
          type: string
    get:
      description: Return project data with given ID
      tags:
        - project
      responses:
        200:
          description: An Object of the project
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProjectRes'
              examples:
                ProjectRes:
                  $ref: '#/components/examples/ProjectRes'
    put:
      description: Return updated project data with given ID
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        200:
          description: An Object of the project
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProjectRes'
              examples: 
                ProjectRes:
                  $ref: '#/components/examples/ProjectRes'

  /projects/{projectId}/enroll:
    parameters:
      - name: projectId
        in: path
        description: project unique identifier
        required: true
        schema:
          type: string
      - name: mode
        in: query
        description: Return enroll PK and cert in text mode, don't response hyperlink
        required: false
        schema:
          type: string  
          enum:
          - text
    post:
      description: Return enroll certificate and key
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/examples/EnrollCreate'
      responses:
        200:
          description: Response enroll certificate and key
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: '#/components/schemas/EnrollRes'
              examples: 
                EnrollRes:
                  $ref: '#/components/examples/EnrollRes'

  /projects/{projectId}/jobs:
    parameters:
      - name: projectId
        in: path
        description: project unique identifier
        required: true
        schema:
          type: string
    post:
      description: Send job command(reboot, app upgrade) to one or multiple devices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/JobReq'
            examples: 
              JobReq:
                $ref: '#/components/examples/JobReq'  
      responses:
        200:
          description: Job command in the working queue
      tags:
        - project 
  
    
    