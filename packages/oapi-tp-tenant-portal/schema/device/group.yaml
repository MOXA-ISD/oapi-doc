swagger: '2.0'

info:
  version: 0.0.1
  title: ThingsPro Tenant Portal RESTful API reference
basePath: '/tenant-api/v1'
schemes:
  - http
  - https
produces:
  - application/json
tags:
  - name: group
    description: Handles tenant groups data

paths:
  /groups:
    get:
      description: Get all groups field data
      responses:
        200:
          description: An array of group
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/GroupList' } }
      tags:
        - group
    post:
      description: Create a new group.
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/GroupReq'
      responses:
        201:
          description: Create group successfully
          schema:
            type: object
            items:
              $ref: '#/definitions/Group'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/Group' } }
      tags:
        - group
 
  /groups/{groupId}:
    parameters:
      - name: groupId
        in: path
        description: group unique identifier
        required: true
        type: string
    get:
      description: Return group data with given ID
      tags:
        - group
      responses:
        200:
          description: An Object of the group
          schema:
            type: object
            items:
              $ref: '#/definitions/Group'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/Group' } }
    delete:
      description: Delete group with given ID
      tags:
        - group
      responses:
        204:
          description: success

  /groups/{groupId}/desiredProperties:
    parameters:
      - name: groupId
        in: path
        description: group unique identifier
        required: true
        type: string
    get:
      description: Return common desired properties data with given ID group
      tags:
        - group
      responses:
        200:
          description: An Object of the desired properties
          schema:
            type: object
            items:
              $ref: '#/definitions/DesiredProperties'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/DesiredProperties' } }

  /groups/{groupId}/directMethodList:
    parameters:
      - name: groupId
        in: path
        description: group unique identifier
        required: true
        type: string
    get:
      description: Return direct methods data with given ID group
      tags:
        - group
      responses:
        200:
          description: An Object of the direct methods
          schema:
            type: object
            items:
              $ref: '#/definitions/DirectMethodList'
          examples: { 'application/json': { $ref: '#/externalDocs/x-mocks/DirectMethodList' } }

definitions:
  Group:
    type: object
    properties:
      groupId:
        type: integer
        description: Unique identifier representing a specific tenant group.
      tenantId:
        type: string
        description: Unique identifier representing a specific tenant.
      groupName:
        type: string
        description: Name of group.
      description:
        type: string
        description: Description of group.  

  GroupReq:
    type: object
    properties:
      modelName:
        type: string
        description: Model name of device.

  DesiredProperties:
    type: object
    properties:
      desiredLastUpdatedAt:
        type: string
        description: Device desired properties updated time, ISO data format, like '2018-08-12T20:17:46.384Z'.   
      desiredProperties:
        type: array
        items:
          type: object
        description: Device desired properties.
        
  DirectMethodList:
    type: object
    properties:
      directMethodList:
        type: array
        items:
          type: object
        description: Device direct method list.
        
externalDocs:
  url: 'http://#'
  x-mocks:
    Group:
      {
        "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "groupId": "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59",
        "groupName": "moxa",
        "devicdIdList": ["1", "2"],
        "description": "moxa group",
        "createdAt": "2018-08-12T20:17:46.384Z",
        "updatedAt": "2018-08-12T20:17:46.384Z"
      }
    GroupList:
      [
        {
          "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
          "groupId": 1,
          "groupName": "moxa",
          "devicdIdList": ["1", "2"],
          "description": "moxa group",
          "createdAt": "2018-08-12T20:17:46.384Z",
          "updatedAt": "2018-08-12T20:17:46.384Z"
        },
        {
          "tenantId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
          "groupId": 2,
          "groupName": "moxa2",
          "devicdIdList": ["1", "3"],
          "description": "moxa group2",
          "createdAt": "2018-08-12T20:17:46.384Z",
          "updatedAt": "2018-08-12T20:17:46.384Z"
        }
      ]
    GroupReq:
      {
        "groupName": "moxa3",
        "description": "moxa group3",
        "devicdIdList": ["1", "2"]
      }
    DesiredProperties:
      { 
        "desiredLastUpdatedAt": "2018-08-12T20:17:46.384Z",
        "desiredProperties": [        
          {
            "id": 1,
            "type": "general",
            "name": "deviceName",
            "description": "Device Name",
            "value": "Demo Device 01"
          },
          {
            "id": 2,
            "type": "general",
            "name": "firmwareVersion",
            "description": "Firmware Version",
            "value": "1.8.1"
          },      
          {
            "id": 3,
            "type": "general",
            "name": "configVersion",
            "description": "Config Version",
            "value": "3.1.2"
          },
          {
            "id": 4,
            "type": "network",
            "name": "eth0",
            "description": "Ethernet 0",
            "value": [
              {
                "id": 1,
                "name": "ipAddress",
                "description": "IP Address",
                "value": "192.168.3.21"
              },
              {
                "id": 2,
                "name": "mask",
                "description": "Subnet Mask",
                "value": "255.255.255.0"
              },
              {
                "id": 3,
                "name": "gateway",
                "description": "Default Gateway",
                "value": "192.168.3.254"
              },
              {
                "id": 4,
                "name": "dhcp",
                "description": "DHCP",
                "value": true
              },
              {
                "id": 5,
                "name": "primaryDns",
                "description": "Primary DNS",
                "value": "192.168.3.254"
              },
              {
                "id": 6,
                "name": "secondaryDns",
                "description": "Secondary DNS",
                "vaule": "10.29.11.121"
              }
            ]
          }          
        ]
      }
    DirectMethodList:
      {    
        "directMethodList": [
          {
            "methodName": "reboot",
            "displayName": "Reboot",
            "description": "Reboot IoT Device immediately",
            "userInput": []
          },
          {
            "methodName": "rebootAt",
            "displayName": "Reboot At",
            "description": "Reboot IoT Device at a specific date time",
            "userInput": [
              {
                "parameter": "executeAt",
                "value": "",
                "dataType": "datetime",
                "description": "UTC time with ISO 8601 format"
              }
            ]
          }
        ]      
      }