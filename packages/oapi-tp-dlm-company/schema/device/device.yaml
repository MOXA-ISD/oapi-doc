swagger: '2.0'

info:
  version: 0.0.0
  title: ThingsPro Company Portal RESTful API reference
basePath: '/api/v1'
schemes:
  - http
  - https
produces:
  - application/json
tags:
  - name: device
    description: Handles device data

paths:
  /projescts/{projectId}/devices:
    get:
      parameters:
        - name: projectId
          in: path
          description: project unique identifier
          required: true
          type: string
        - name: hostName
          in: query
          description: Filter the device list by hostName
          required: false
          type: string
        - name: modelName
          in: query
          description: Filter the device list by modelName
          required: false
          type: string
        - name: mac
          in: query
          description: Filter the device list by mac
          required: false
          type: string
        - name: serialNumber
          in: query
          description: Filter the device list by serial number
          required: false
          type: string
        - name: keyword
          in: query
          description: Search keyword by wildcard - support host name, serial number
          required: false
          type: string
        - name: status
          in: query
          description: Filter the device list by status
          required: false
          type: string
          enum:
          - enrolled
          - registered
          - online
          - offline
          - retired
        - name: order
          in: query
          description: Sort the device list by specific condition, default is order by 'updatedAt'
          required: false
          type: string
          enum:
          - hostName
          - modelName
          - serialNumber
          - status
          - version
          - profileName
          - updatedAt
        - name: mode
          in: query
          description: Default is simple, if the query mode is map, service will response gps information in properteis field
          required: false
          type: string
          enum:
          - simple
          - map
        - name: sort
          in: query
          description: Sorting the filter device list, default is desc
          required: false
          type: string
          enum:
          - desc
          - asc
        - name: limit
          in: query
          description: max return devices count (default is 100 and max is 1000)
          required: false
          type: integer
        - name: offset
          in: query
          description: offset
          required: false
          type: integer
        - name: distinct
          in: query
          description: Get distict value of speific field, this query parameter will return string array only
          required: false
          type: string
          enum:
          - tag
          - modelName
          - status        
      description: Get all devices field data
      responses:
        200:
          description: An array of devices
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Device'
              count:
                type: integer
              offset:
                type: integer
              limit:
                type: integer
            example: 
              $ref: '#/externalDocs/x-mocks/DeviceList'
      tags:
        - device

  /devices/{deviceId}:
    parameters:
      - name: deviceId
        in: path
        description: device unique identifier
        required: true
        type: string
    get:
      description: Return device data with given ID
      tags:
        - device
      responses:
        200:
          description: An Object of the device
          schema:
            type: object
            items:
              $ref: '#/definitions/DeviceDetail'
            example: 
              $ref: '#/externalDocs/x-mocks/DeviceDetail'
    delete:
      description: Retire device with given ID
      tags:
        - device
      responses:
        204:
          description: success

  /devices/{deviceId}/config:
    parameters:
      - name: deviceId
        in: path
        description: device unique identifier
        required: true
        type: string
    get:
      description: Return reported properties data with given ID device
      tags:
        - device
      responses:
        200:
          description: An Object of the reported properties
          schema:
            type: object
            properties:
              data:
                type: object
                items:
                  $ref: '#/definitions/Config'
            example: 
              $ref: '#/externalDocs/x-mocks/Config'
    patch:
      description: Update device properties
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/ConfigReq'
      responses:
        200:
          description: Direct command sends
      tags:
        - device      

  /devices/jobs:
    post:
      description: Send direct command to multiple device
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/JobReq'
      responses:
        200:
          description: Direct command sends
      tags:
        - device      

  /devices/{deviceId}/jobs:
    parameters:
      - name: deviceId
        in: path
        description: device unique identifier
        required: true
        type: string
    get:
      description: Return direct methods data with given ID device
      tags:
        - device
      responses:
        200:
          description: An Object of the direct methods
          schema:
            type: object
            properties:
              data:
                type: object
                items:
                  $ref: '#/definitions/JobList'
            example: 
              $ref: '#/externalDocs/x-mocks/JobList'

  /models:
    get:
      description: Return all supports model list
      tags:
        - device
      responses:
        200:
          description: An array of all supports model list
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: string
            example: 
              $ref: '#/externalDocs/x-mocks/ModelList'
definitions:
  Device:
    type: object
    properties:
      projectId:
        type: string
        description: Unique identifier representing a specific project.
      deviceId:
        type: string
        description: Unique identifier representing a specific device.
      modelName:
        type: string
        description: Model name of device.
      mac:
        type: string
        description: Mac address of device.
      serialNumber:
        type: string
        description: Serial number of device.
      version:
        type: string
        description: Firmware version of device.
      tags:
        type: array
        description: Tag list of device.
        items:
          type: string
      status:
        type: string
        enum:
        - online
        - offline
        - registered
        - enrolled
        - retired
        description: status of device.    
      configStatus:
        type: string
        enum:
        - normal
        - modified
      profileId:
        type: integer
        description: Dependency Profile id, this field could be empty, if there is no dependency Profile.
      profileName:
        type: string
        description: Dependency profile name.
      configUpdatedAt:
        type: string
        description: Device last config updated time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      connectedAt:
        type: string
        description: Device last connected time, ISO data format, like '2018-08-12T20:17:46.384Z'.
      disconnectedAt:
        type: string
        description: Device last disconnected time, ISO data format, like '2018-08-12T20:17:46.384Z'.
  DeviceRes:
    type: object
    properties:
      data:
        type: object
        items:
          $ref: '#/definitions/Device'
  DeviceDetail:
    type: object
    properties:
      data:
        type: object
        properties:
          projectId:
            type: string
            description: Unique identifier representing a specific project.
          deviceId:
            type: string
            description: Unique identifier representing a specific device.
          modelName:
            type: string
            description: Model name of device.
          mac:
            type: string
            description: Mac address of device.
          serialNumber:
            type: string
            description: Serial number of device.
          version:
            type: string
            description: Firmware version of device.
          tags:
            type: array
            description: Tag list of device.
            items:
              type: string
          status:
            type: string
            enum:
            - online
            - offline
            - registered
            - enrolled
            - retired
            description: status of device.    
          configStatus:
            type: string
            enum:
            - normal
            - modified
          profileId:
            type: integer
            description: Dependency Profile id, this field could be empty, if there is no dependency Profile.
          profileName:
            type: string
            description: Dependency profile name.
          configUpdatedAt:
            type: string
            description: Device last config updated time, ISO data format, like '2018-08-12T20:17:46.384Z'.
          connectedAt:
            type: string
            description: Device last connected time, ISO data format, like '2018-08-12T20:17:46.384Z'.
          disconnectedAt:
            type: string
            description: Device last disconnected time, ISO data format, like '2018-08-12T20:17:46.384Z'.
          reportedProperties:
            type: object
            description: Device reportedProperties. 

  Config:
    type: object
    

  ConfigReq:
    type: object
    
  JobList:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
        description: Device support job list.

  JobReq:
    type: object
    required:
      - deviceId
      - methodName
    properties:
      deviceId:
        type: array
        description: List of deviceId.
        items:
          type: string
      methodName:
        type: string
        description: Method name.       
      userInput:
        type: array
        description: Method optoinal parameters. 
        items:
          properties:
            parameter:
              type: string
              description: Parameter name of parameter.
            value:
              type: string
              description: Vaule of parameter.
      isScheduleJob:
        type: boolean
        description: Is job schedule.
      scheduleAt:
        type: string
        description: If job is scheduleable, scheduleAt should be ISO format time, like 2017-02-19T15:46:02.2935009Z".    
      isRepeatableJob:
        type: boolean
        description: Is job repeatable.
      repeatedPattern:
        type: string
        description: If job is repeatable, repeatedPattern should be append and format is crontab, like "59 23 31 12 5 * ".   

externalDocs:
  url: 'http://#'
  x-mocks:
    Device:
      {
        "projectId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "deviceId": "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59",
        "mac": "000C2970D2EC",
        "serialNumber": "123456",
        "hostName": "moxa",
        "modelName": "UC-8112-LX-CG",
        "profileId": 1,
        "profileName": "test",
        "status": "online",
        "tags": ["moxa"],
        "configUpdatedAt": "2019-02-26T14:10:33:000Z",
        "connectedAt": "2019-02-26T14:10:33:000Z",
        "disconnectedAt": "2019-02-26T14:10:33:000Z"
      } 
    DeviceRes:
      {
        "data": {
          "projectId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
          "deviceId": "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59",
          "mac": "000C2970D2EC",
          "serialNumber": "123456",
          "hostName": "moxa",
          "modelName": "UC-8112-LX-CG",
          "profileId": 1,
          "profileName": "test",
          "status": "online",
          "tags": ["moxa"],
          "configUpdatedAt": "2019-02-26T14:10:33:000Z",
          "connectedAt": "2019-02-26T14:10:33:000Z",
          "disconnectedAt": "2019-02-26T14:10:33:000Z"
        }
      } 
    DeviceList:
      {
        "count": 5,
        "offset": 0,
        "limit": 100,
        "data":
          [
            {
              "projectId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
              "deviceId": "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59",
              "mac": "000C2970D2EC",
              "serialNumber": "123456",
              "hostName": "moxa",
              "modelName": "UC-8112-LX-CG",
              "profileId": 1,
              "profileName": "test",
              "status": "online",
              "tags": ["moxa"],
              "configStatus": "normal",
              "configUpdatedAt": "2019-02-26T14:10:33:000Z",
              "connectedAt": "2019-02-26T14:10:33:000Z",
              "disconnectedAt": "2019-02-26T14:10:33:000Z"
            }
          ]
      }
    JobList:
      {    
        "data": [
          {
            "methodName": "reboot",
            "displayName": "Reboot",
            "description": "Reboot IoT Device immediately",
            "userInput": []
          },
          {
            "methodName": "rebootAt",
            "displayName": "Reboot At",
            "description": "Reboot IoT Device at a specific date time",
            "userInput": [
              {
                "parameter": "executeAt",
                "value": "",
                "dataType": "datetime",
                "description": "UTC time with ISO 8601 format"
              }
            ]
          }
        ]      
      }
    JobReq:
      {
        "deviceId": ["346d9463-a60a-4d6a-b419-f59f11e07ff5"],
        "methodName": "reboot",
        "isScheduleJob": false,
        "isRepeatableJob": false,
        "repeatedPattern": "",
        "scheduleAt": "",
        "userInput": [
          {
            "parameter": "rebootId",
            "value": "1"
          }
        ]
      }
    ModelList:
      {
        "data" : [
          "UC-8112-LX",
          "UC-8112A-ME-T-LX"
        ]
      }
    DeviceDetail:
      {
        "data": {
          "projectId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
          "deviceId": "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59",
          "mac": "000C2970D2EC",
          "serialNumber": "123456",
          "hostName": "moxa",
          "modelName": "UC-8112-LX-CG",
          "profileId": 1,
          "profileName": "test",
          "status": "online",
          "tags": ["moxa"],
          "configUpdatedAt": "2019-02-26T14:10:33:000Z",
          "connectedAt": "2019-02-26T14:10:33:000Z",
          "disconnectedAt": "2019-02-26T14:10:33:000Z",
          "reportedProperties": {
            "reported": {}
          }
        }
      }   
    DeviceModeMap:
      {
        "projectId": "65af94c4-07e4-43d7-abad-3cb5f295550b",
        "deviceId": "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59",
        "mac": "000C2970D2EC",
        "serialNumber": "123456",
        "hostName": "moxa",
        "modelName": "UC-8112-LX-CG",
        "profileId": 1,
        "profileName": "test",
        "status": "online",
        "tags": ["moxa"],
        "configUpdatedAt": "2019-02-26T14:10:33:000Z",
        "connectedAt": "2019-02-26T14:10:33:000Z",
        "disconnectedAt": "2019-02-26T14:10:33:000Z",
        "gps": [
          {
              "enable": true,
              "location": {
                  "lat": 0,
                  "lng": 0
              },
              "mode": "manual"
          }
        ]
      }
    ConfigReq:
      {
        "deviceId": ["346d9463-a60a-4d6a-b419-f59f11e07ff5"],
        "config": {
          "general": {
            "deviceName": "MyThingsProEdge",
            "hostName": "Moxa"
          },
          "time": {
              "ntp": {
                  "enable": false,
                  "interval": 60,
                  "server": "tock.stdtime.gov.tw"
              },
              "timezone": "Asia/Taipei"
          }
        }
      }  
    Config:
      {
        "general": {
            "deviceName": "MyThingsProEdge",
            "hostName": "Moxa"
        },
        "time": {
            "ntp": {
                "enable": false,
                "interval": 60,
                "server": "tock.stdtime.gov.tw"
            },
            "timezone": "Asia/Taipei"
        },
        "route": {
            "priorityList": [
                "Cellular1", "LAN1","LAN2"
            ]
        },
        "iptables": {
            "firewall": [
                {
                    "action": "drop",
                    "default": true,
                    "destIp": "",
                    "destPort": "",
                    "direction": "inbound",
                    "enable": true,
                    "id": 1,
                    "interface": "",
                    "protocol": "",
                    "srcIp": "",
                    "srcPort": ""
                },
                {
                    "action": "accept",
                    "default": false,
                    "destIp": "",
                    "destPort": "80",
                    "direction": "inbound",
                    "enable": true,
                    "id": 10000,
                    "interface": "",
                    "protocol": "tcp",
                    "srcIp": "",
                    "srcPort": ""
                },
                {
                    "action": "accept",
                    "default": false,
                    "destIp": "",
                    "destPort": "8443",
                    "direction": "inbound",
                    "enable": true,
                    "id": 10001,
                    "interface": "",
                    "protocol": "tcp",
                    "srcIp": "",
                    "srcPort": ""
                },
                {
                    "action": "accept",
                    "default": false,
                    "destIp": "172.31.8.0/22",
                    "destPort": "",
                    "direction": "inbound",
                    "enable": true,
                    "id": 10002,
                    "interface": "",
                    "protocol": "tcp",
                    "srcIp": "",
                    "srcPort": ""
                },
                {
                    "action": "accept",
                    "default": false,
                    "destIp": "",
                    "destPort": "22",
                    "direction": "inbound",
                    "enable": true,
                    "id": 10010,
                    "interface": "",
                    "protocol": "tcp",
                    "srcIp": "",
                    "srcPort": ""
                }
            ]
        },
        "ethernets": [
            {
                "enable": true,
                "enableDhcp": true,
                "wan": true
            },
            {
                "dns": [
                    "8.8.8.8"
                ],
                "enable": true,
                "enableDhcp": false,
                "ip": "192.168.4.127",
                "netmask": "255.255.255.0",
                "wan": false
            }
        ],
        "gps": [
            {
                "enable": true,
                "location": {
                    "lat": 0,
                    "lng": 0
                },
                "mode": "manual"
            }
        ],
        "serials": [
            {
                "mode": "rs232"
            },
            {
                "mode": "rs232"
            }
        ]
      }
    